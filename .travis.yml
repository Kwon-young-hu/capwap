sudo: required
dist: xenial
services:
  - docker

language: erlang

otp_release:
 - 20.3.8.5
 - 21.1.4
 - 21.2.5

install: "true"

env:
  global:
    - BUILD_IMAGE="ergw/ergw-capwap-node"
    - DOCKER_USERNAME="ergwci"
    - secure: "k8SSM16CNTQO2s6RTtnYAPEJ26DHoOju5YzySfclUeMF+esD1empKKBviq9QFdioPrIr+PWCANvWrCNASG0sEC86VuAsSdledikN+PCZlBYngR99RaHhprXJc3NPyTWsYO4kQCiJu5g4veHQCoFQ16oRYzBiuPrkMXmlrzI46C64bBeo4ttkTZu3D+rAQacSMtM4Xcl1FWkwsPSma9Ikn+k4avqP96r56avUjxSnyTzthvrdIyT0BMcQOAk4WJzfNMHkCCjc3t7MREVU73+nT8UAS1m6VrVWCiiy2bW/0l1vGB+MznTiy4c6mLz0ZSJLplvqA/Dd5kUKOcBefmwmnklDZ6ZnD1IrJIAO54rX+fuhnWZE0/pt/3pjhG3SMHgM+o9s1LGKzNf8TlTDEnevtniHFF3is9b6RzWSJIIdCBIPhyDi9rQ7nGMOYPf1tKdDsQThNEynDgQNPC9Waj/bHFFTzCyCWbikUnSCJtMCB46JxTSWEDd5xxgGWMx/QywIZlZip2OhZIVwOjKPCX2At7FYyJ5S1gGD+oGTjkgoPLBRSXiLus8jC615cNTmrBmZb6g/u6GGQgjh1HeFN5cmDvjNSWfcTednhIvnwmGp4fNMjrl/l338tVWYXIvxUWg91Wxz5N9z7cmFBjivqdUrbEeACJPbmvqQbbNK9+wlmew="

before_script:
  - wget https://s3.amazonaws.com/rebar3/rebar3
  - chmod u+x ./rebar3

script:
  - ./rebar3 compile
  - ./rebar3 do xref, ct
  - (./rebar3 as test do coveralls send || /bin/true)

jobs:
  include:
    - stage: docker
      otp_release: 21.2.5
      script:
        - docker build -t $BUILD_IMAGE -f docker/Dockerfile .
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - export TAG=`if [ "$TRAVIS_EVENT_TYPE" == "pull_request" ]; then echo PR-$TRAVIS_PULL_REQUEST_BRANCH\_$TRAVIS_PULL_REQUEST_SHA ; else echo $TRAVIS_BRANCH\_$TRAVIS_COMMIT ; fi`
        - export TAG=`echo "$TAG" | sed -e 's,/,-,g'`
        - echo "Docker image $BUILD_IMAGE:$TAG"
        - if [ "$TAG" == "master" ]; then export TAG="latest"; fi
        - docker tag $BUILD_IMAGE $BUILD_IMAGE:$TAG
        - docker push $BUILD_IMAGE:$TAG
        - echo "docker push done"

notifications:
  slack:
    secure: "FfunzqgAWYjBclFDTlEseNLiUegv1wHDiz2mrM8K0iQi9fCejONTMekKvhRdznyYyF7mf7kYFh6NTtmSFqeeGbtn5l/lg8BYo7sdcEl5xFa9wBEdhw7coLHniSqA9gLCsnOl8LgKsCy0ZnBCq6qE75zzhnO7K72mngzpvv7hvVvpDyBRfxr/LTkNifAuixLev9PLg4iX5MxZIrr/95fOY7kSrb1SRtdkVQw3NKjNt9mbp69FDoV4tDi43NfC5hc/B8+mwF4ccjrr8M2b5zytn/Y0RR3TqJrUwKUw9L5ybIRgDcz3lBNpBRa3E8PuWyfCvXBMAMAoV5rOCWROg9klv23gCUZ9cqfeZyIJoPdrOGchi44+kWjsyGIo4JdPSzhO1/GUt9pipn41ve8eXPrLkhFg2zB3uoQR9y54sTPUnyXKCWRD+p/Q9C0AtWiNozT73SJ8kqLv1GZ13ZBXwXHJjs5QZz+ZQ3C0TNHNrh2a9GsC73zptobOlbcdQyeK3bEfeVUWXSqVgQcbVnlPnbDJNR3CmL0PgrktY+Et5Se1r3PFkHzmgNVJ0OF12b1wRE0I2DMPWb/GQUTLeNVBUokfJGEsRwRyhQuC1TI8a86zvMYxoViBcDQz5ec9+oDwTmKpN3iLLY/Bv/1gSAPjC9M/+c4hXxVYIPbEmeMgqru9Brs="
